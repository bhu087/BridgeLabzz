//<auto-generated/>
namespace AlgorithmPrograms
{
    using System;
    using System.Collections.Generic;
    using System.Text;

    /// <summary>
    /// This is the merge sort
    /// </summary>
    public class MergeSortProgram
    {
        /// <summary>
        /// Merges the specified array.
        /// </summary>
        /// <param name="array">The array.</param>
        /// <param name="lo">The lo.</param>
        /// <param name="mid">The mid.</param>
        /// <param name="hi">The hi.</param>
        public static void Merge(int[] array, int lo, int mid, int hi)
        {
            int i, j, k;
            int n1 = mid - lo + 1;
            int n2 = hi - mid;
            int[] left = new int[n1];
            int[] right = new int[n2];
            for (i = 0; i < n1; i++)
            {
                left[i] = array[lo + i];
            }

            for (j = 0; j < n2; j++)
            {
                right[j] = array[mid + 1 + j];
            }

            i = 0;
            j = 0;
            k = lo;
            while (i < n1 && j < n2)
            {
                if (left[i] <= right[j])
                {
                    array[k] = left[i];
                    i++;
                }
                else
                {
                    array[k] = right[j];
                    j++;
                }

                k++;
            }

            while (i < n1)
            {
                array[k] = left[i];
                i++;
                k++;
            }

            while (j < n2)
            {
                array[k] = right[j];
                j++;
                k++;
            }
        }

        /// <summary>
        /// Merges the sort.
        /// </summary>
        /// <param name="array">The array.</param>
        /// <param name="low">The low.</param>
        /// <param name="high">The high.</param>
        public static void MergeSort(int[] array, int low, int high)
        {
            if (low < high)
            {
                int middle = (low + high) / 2;
                MergeSort(array, low, middle);
                MergeSort(array, middle + 1, high);
                Merge(array, low, middle, high);
            }
        }

        /// <summary>
        /// Merges the program.
        /// </summary>
        public static void MergeProgram()
        {
            int[] array = { 11, 23, 1, 444, 52, 0, 1, 28 };
            int i;
            Console.WriteLine("Merge Sort");
            Console.Write("Initial array is: ");
            for (i = 0; i < array.Length; i++)
            {
                Console.Write(array[i] + " ");
            }

            MergeSort(array, 0, array.Length - 1);
            Console.Write("\nSorted Array is: ");
            for (i = 0; i < array.Length; i++)
            {
                Console.Write(array[i] + " ");
            }
        }
    }
}
